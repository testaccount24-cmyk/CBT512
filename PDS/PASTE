/* REXX */


/*********************************************************************/
/*                                                                   */
/* ISPF Edit Macro "PASTE".                                          */
/*                                                                   */
/* The "CUT" and "PASTE" edit macros allow users to easily copy text */
/* lines between ISPF editor sessions, via a temporary ISPF table.   */
/*                                                                   */
/* Author: Luc Van Rompaey, Telepolis Antwerpen, Belgium.            */
/*                                                                   */
/*********************************************************************/


"ISREDIT MACRO ( Args ) NOPROCESS"


CutMnLim  =  100       /* Minimum value allowed for the Line Limit.  */
CutMxLim  = 9999       /* Maximum value allowed for the Lime Limit.  */


CutInTbl  = "AA"       /* Initial value for the Default Table Name.  */
CutInLim  = 2000       /* Initial value for the Default Line Limit.  */


PasteCmd  = ""
CutTable  = ""


ShortCmds = "C"     "D"        "H"    "?"    "K"    "P"
LongCmds  = "CLEAR" "DEFAULTS" "HELP" "HELP" "KEEP" "PROMPT"


"ISPEXEC VGET (CUTDFCMD CUTDFPST CUTDFTBL CUTDFLIM) PROFILE"


/*********************************************************************/
/*                                                                   */
/* Parse the argument string.                                        */
/*                                                                   */
/*********************************************************************/


ArgError = 0


DO i = 1 BY 1


   arg = WORD( Args , i )


   SELECT
      WHEN ( arg = "" ) THEN
         DO
            /*********************************************************/
            /*                                                       */
            /* This is the end of the argument string.               */
            /*                                                       */
            /*********************************************************/
            LEAVE
         END
      WHEN ( LENGTH( arg ) = 2 ) THEN
         DO
            IF ( CutTable /= "" ) THEN
               DO
                  /***************************************************/
                  /*                                                 */
                  /* ERROR:  Multiple occurrences of the  'CutTable' */
                  /*         argument were found.                    */
                  /*                                                 */
                  /***************************************************/
                  ArgError = 1
               END
            ELSE
               DO
                  /***************************************************/
                  /*                                                 */
                  /* This is the 'CutTable' argument.                */
                  /*                                                 */
                  /***************************************************/
                  CutTable = TRANSLATE( arg )
               END
         END
      WHEN ( WORDPOS( arg , "0 1 2 3 4 5 6 7 8 9" ) > 0 ) THEN
         DO
            IF ( CutTable /= "" ) THEN
               DO
                  /***************************************************/
                  /*                                                 */
                  /* ERROR:  Multiple occurrences of the  'CutTable' */
                  /*         argument were found.                    */
                  /*                                                 */
                  /***************************************************/
                  ArgError = 1
               END
            ELSE
               DO
                  /***************************************************/
                  /*                                                 */
                  /* This is the 'CutTable' argument.                */
                  /*                                                 */
                  /***************************************************/
                  CutTable = "0"arg
               END
         END
      OTHERWISE
         DO
            IF ( PasteCmd /= "" ) THEN
               DO
                  /***************************************************/
                  /*                                                 */
                  /* ERROR:  Multiple occurrences of the  'PasteCmd' */
                  /*         argument were found.                    */
                  /*                                                 */
                  /***************************************************/
                  ArgError = 1
               END
            ELSE
               DO
                  arg = TRANSLATE( LEFT( arg , 1 ) )
                  /***************************************************/
                  /*                                                 */
                  /* This is the 'PasteCmd' argument,  provided that */
                  /* it  is  recognised  as  a  valid  action  name; */
                  /* otherwise, an error will have to be reported.   */
                  /*                                                 */
                  /***************************************************/
                  CmdNo = WORDPOS( arg , ShortCmds )
                  IF ( CmdNo < 1 ) THEN
                     DO
                        ArgError = 1
                     END
                  ELSE
                     DO
                        PasteCmd = WORD( LongCmds , CmdNo )
                     END
               END
         END
   END


END


IF ArgError THEN
   DO
      /***************************************************************/
      /*                                                             */
      /* Invalid arguments.                                          */
      /* Return an error condition to the ISPF Editor.               */
      /*                                                             */
      /***************************************************************/
      "ISPEXEC SETMSG MSG(CUT002)"
      EXIT 12
   END


/*********************************************************************/
/*                                                                   */
/* If the  user  requested  the  "HELP"  action,  then  display  the */
/* appropriate tutorial page.                                        */
/* Then, when the user returns from the tutorial, just exit.         */
/*                                                                   */
/*********************************************************************/


IF ( PasteCmd = "HELP" ) THEN
   DO
      "ISPEXEC CONTROL DISPLAY SAVE"
      "ISPEXEC SELECT PGM(ISPTUTOR) PARM(CUTHELP)"
      "ISPEXEC CONTROL DISPLAY RESTORE"
      EXIT 0
   END


/*********************************************************************/
/*                                                                   */
/* Decide if the 'CUTDFPRM' panel will be  displayed  to  the  user, */
/* i.e., if the user requested the "DEFAULTS" action.                */
/*                                                                   */
/*********************************************************************/


SELECT
   WHEN ( PasteCmd = "DEFAULTS" ) THEN
      DO
         /************************************************************/
         /*                                                          */
         /* No special preparatory actions need be taken  to display */
         /* the 'CUTDFPRM' panel.                                    */
         /*                                                          */
         /************************************************************/
         NOP
      END
   WHEN ( CutDfCmd = "" ) THEN
      DO
         /************************************************************/
         /*                                                          */
         /* This is a new user.                                      */
         /* Display  a  welcome  panel.  Then,  if the user wants to */
         /* continue,  no further special action need  be  taken  to */
         /* display the 'CUTDFPRM' panel.                            */
         /*                                                          */
         /************************************************************/
         "ISPEXEC DISPLAY PANEL(CUTDFNEW)"
         ReturnCode = RC


         IF ( ReturnCode = 8 ) THEN
            DO
               /******************************************************/
               /*                                                    */
               /* The user requested termination,  by typing  either */
               /* the END or the RETURN command.                     */
               /*                                                    */
               /******************************************************/
               EXIT 0
            END
      END
   OTHERWISE
      DO
         /************************************************************/
         /*                                                          */
         /* Ensure that the 'CUTDFPRM' panel will  be  processed  in */
         /* non-display mode,  so it will run its data  validations. */
         /* The panel will not,  then,  get  displayed  to the user, */
         /* unless it contains invalid data values.                  */
         /*                                                          */
         /************************************************************/
         "ISPEXEC CONTROL NONDISPL"
      END
END


"ISPEXEC DISPLAY PANEL(CUTDFPRM)"
ReturnCode = RC


IF ( ReturnCode = 8 ) THEN
   DO
      /***************************************************************/
      /*                                                             */
      /* The user requested termination, by typing either the END or */
      /* the RETURN command.                                         */
      /*                                                             */
      /***************************************************************/
      EXIT 0
   END


"ISPEXEC VPUT (CUTDFCMD CUTDFPST CUTDFTBL CUTDFLIM) PROFILE"


IF ( PasteCmd = "DEFAULTS" ) THEN
   DO
      /***************************************************************/
      /*                                                             */
      /* No  further  processing  is  required  for  the  "DEFAULTS" */
      /* action.                                                     */
      /*                                                             */
      /***************************************************************/
      EXIT 0
   END


IF ( PasteCmd = "PROMPT" ) THEN
   DO
      /***************************************************************/
      /*                                                             */
      /* The user requested the "PROMPT" action.                     */
      /*                                                             */
      /***************************************************************/
      PasteCmd = CutDfPst
   END
ELSE
   DO
      /***************************************************************/
      /*                                                             */
      /* Ensure that the  'CUTPRPST'  panel  will  be  processed  in */
      /* non-display mode.                                           */
      /*                                                             */
      /***************************************************************/
      "ISPEXEC CONTROL NONDISPL"
   END


"ISPEXEC DISPLAY PANEL(CUTPRPST)"
ReturnCode = RC


IF ( ReturnCode = 8 ) THEN
   DO
      /***************************************************************/
      /*                                                             */
      /* The user requested termination,  by typing either  the  END */
      /* or the RETURN command.                                      */
      /*                                                             */
      /***************************************************************/
      EXIT 0
   END


/*********************************************************************/
/*                                                                   */
/* Use the default values for any arguments that the  user  did  not */
/* specify.                                                          */
/*                                                                   */
/*********************************************************************/


IF ( PasteCmd = "" ) THEN   PasteCmd = CutDfPst
IF ( CutTable = "" ) THEN   CutTable = CutDfTbl


/*********************************************************************/
/*                                                                   */
/* Process the A(fter) or B(efore) line commands.                    */
/* Note that the  "ISREDIT PROCESS"  command may result in a  return */
/* code of 16,  if the user enters incomplete  or  conflicting  line */
/* commands.  By default,  ISPF will intercept these  return  codes, */
/* and terminate the macro  when they occur.  To  ensure  that  ISPF */
/* will, instead,  return control back to the edit macro under these */
/* conditions,  the "ISREDIT PROCESS" command will have to be run in */
/* ERRORS RETURN mode.                                               */
/*                                                                   */
/*********************************************************************/


"ISPEXEC CONTROL ERRORS RETURN"     /* Initiate ERRORS RETURN mode.  */
"ISREDIT PROCESS DEST"              /* Process A(fter) or B(efore).  */
ReturnCode = RC                     /* Catch the return code.        */
"ISPEXEC CONTROL ERRORS CANCEL"     /* Return to ERRORS CANCEL mode. */


/*********************************************************************/
/*                                                                   */
/* INABIAF  ("It's Not A Bug, It's A Feature"):  If the edit dataset */
/* is  empty,  and the user did not specify  the  destination,  then */
/* the return code from the  "ISREDIT  PROCESS"  command will be  20 */
/* (even though the destination need not really be  explicitly  set, */
/* since it can just as well be implied).                            */
/*                                                                   */
/*********************************************************************/


IF ( ReturnCode = 20 ) THEN                   /* INABIAF Workaround. */
   DO                                         /* INABIAF Workaround. */
      ReturnCode = 0                          /* INABIAF Workaround. */
   END                                        /* INABIAF Workaround. */


IF ( ReturnCode /= 0 ) THEN
   DO
      SELECT
         WHEN ( ReturnCode < 16 ) THEN
            DO
               /******************************************************/
               /*                                                    */
               /* Missing line commands.                             */
               /* In this case,  the  return  code  will  be  8,  to */
               /* indicate that a destination was expected  but  not */
               /* found.                                             */
               /*                                                    */
               /******************************************************/
               "ISPEXEC SETMSG MSG(CUT002A)"
               EXIT 12
            END
         WHEN ( ReturnCode = 16 ) THEN
            DO
               /******************************************************/
               /*                                                    */
               /* Incomplete or conflicting line commands.           */
               /* ISPF has set up the appropriate  system  variables */
               /* for  message  'ISRZ002';  these  system  variables */
               /* will be reused by message 'CUT002B'.               */
               /*                                                    */
               /******************************************************/
               "ISPEXEC SETMSG MSG(CUT002B)"
               EXIT 8
            END
         OTHERWISE
            DO
               /******************************************************/
               /*                                                    */
               /* Severe error.                                      */
               /*                                                    */
               /******************************************************/
               "ISPEXEC SETMSG MSG(CUT002C)"
               EXIT 12
            END
      END
   END


/*********************************************************************/
/*                                                                   */
/* Query the destination line number.                                */
/* Also query the current bounds settings and the data width.        */
/* Furthermore,  construct  the  ISPF  table  name  from  which  the */
/* cut lines will be pasted, and set the name of its table variable. */
/*                                                                   */
/*********************************************************************/


"ISREDIT ( DestLine ) = LINENUM .ZDEST"    /* Destination Line.      */


"ISREDIT  ( BndsLo , BndsHi ) = BOUNDS"    /* Current Bounds.        */
"ISREDIT  ( EditCols ) = DATA_WIDTH"       /* Current Data Width.    */


BndsCols  = BndsHi  - BndsLo  + 1          /* Columns within Bounds. */


TableName = "CUTTBL"CutTable               /* ISPF Table Name.       */
TableVar  = "CUTLINE"                      /* Table Variable Name.   */


/*********************************************************************/
/*                                                                   */
/* Query the status of the table with respect to the current logical */
/* screen.  Only two status values can be supported by this macro:   */
/*    o  1 - The table is not open in this logical screen;           */
/*    o  4 - The table is  open  in  SHARED  NOWRITE  mode  in  this */
/*           logical screen.                                         */
/*                                                                   */
/* If the table is not open within the logical screen,  then attempt */
/* to open it.                                                       */
/*                                                                   */
/*********************************************************************/


"ISPEXEC TBSTATS" TableName "STATUS2(STATUS2)"


IF ( Status2 = 1 ) THEN
   DO
      "ISPEXEC TBOPEN" TableName "NOWRITE SHARE"
   END


/*********************************************************************/
/*                                                                   */
/* At  this  point,  the logical screen should have the  table  open */
/* in SHARED NOWRITE mode, and the table should not be empty.        */
/*                                                                   */
/*********************************************************************/


"ISPEXEC TBSTATS" TableName "STATUS2(STATUS2) ROWCURR(ROWCURR)"


SELECT
   WHEN ( Status2 = 1 ) THEN
      DO
         /************************************************************/
         /*                                                          */
         /* The table is not  open,  most  likely  because  it  does */
         /* not exist.  Report that the table is empty.              */
         /*                                                          */
         /************************************************************/
         "ISPEXEC SETMSG MSG(CUT002D)"
         EXIT 12
      END
   WHEN ( Status2 = 4 ) THEN
      DO
         IF ( RowCurr = 0 ) THEN
            DO
               /******************************************************/
               /*                                                    */
               /* The table is open  in  SHARED  NOWRITE  mode,  but */
               /* it is empty.  Report that the table is empty.      */
               /*                                                    */
               /******************************************************/
               "ISPEXEC SETMSG MSG(CUT002D)"
               EXIT 12
            END
         "ISPEXEC TBTOP" TableName
      END
   OTHERWISE
      DO
         /************************************************************/
         /*                                                          */
         /* Return an error condition to the ISPF Editor.            */
         /*                                                          */
         /************************************************************/
         "ISPEXEC SETMSG MSG(CUT002J)"
         EXIT 12
      END
END


PasteCnt = 0
TruncCnt = 0


IF ( BndsCols >= EditCols ) THEN
   DO
      /***************************************************************/
      /*                                                             */
      /* Paste the rows from the table, one by one.                  */
      /*                                                             */
      /***************************************************************/
      DO RowCurr
         "ISPEXEC TBSKIP" TableName
         "ISREDIT LINE_AFTER" DestLine "= (" TableVar ")"
         ReturnCode = RC


         IF ( ReturnCode /= 0 ) THEN
            DO
               TruncCnt = TruncCnt + 1
            END
         PasteCnt = PasteCnt + 1
         DestLine = DestLine + 1
      END
   END
ELSE
   DO
      /***************************************************************/
      /*                                                             */
      /* Paste only into the columns  within  the  current  boundary */
      /* settings.                                                   */
      /*                                                             */
      /***************************************************************/
      DO RowCurr
         "ISPEXEC TBSKIP" TableName
         DataLine = VALUE( TableVar )
         IF LENGTH( DataLine ) > BndsCols THEN
            DO
               DataLine = LEFT( DataLine , BndsCols )
               TruncCnt = TruncCnt + 1
            END


         "ISREDIT LINE_AFTER" DestLine "= <" BndsLo "( DataLine ) >"
         PasteCnt = PasteCnt + 1
         DestLine = DestLine + 1
      END
   END


IF ( TruncCnt > 0 ) THEN
   DO
      /***************************************************************/
      /*                                                             */
      /* At least one row was truncated when it was pasted into  the */
      /* edit dataset.  Do not clear the table,  even  if  the  user */
      /* requested the "CLEAR" action.                               */
      /*                                                             */
      /***************************************************************/
      IF ( PasteCnt = 1 ) THEN
         DO
            "ISPEXEC SETMSG MSG(CUT003A)"
         END
      ELSE
         DO
            IF ( TruncCnt = 1 ) THEN
               DO
                  "ISPEXEC SETMSG MSG(CUT003B)"
               END
            ELSE
               DO
                  "ISPEXEC SETMSG MSG(CUT003C)"
               END
         END
   END
ELSE
   DO
      /***************************************************************/
      /*                                                             */
      /* If the user requested the "CLEAR" action,  then  delete the */
      /* rows from the table one by one, starting from the bottom.   */
      /*                                                             */
      /***************************************************************/
      IF ( PasteCmd = "CLEAR" ) THEN
         DO
            "ISPEXEC TBBOTTOM" TableName "NOREAD"
            ReturnCode = RC


            DO WHILE ( ReturnCode = 0 )
               "ISPEXEC TBDELETE" TableName
               ReturnCode = RC
            END


            IF ( PasteCnt = 1 ) THEN
               DO
                  "ISPEXEC SETMSG MSG(CUT003J)"
               END
            ELSE
               DO
                  "ISPEXEC SETMSG MSG(CUT003K)"
               END
         END
      ELSE
         DO
            IF ( PasteCnt = 1 ) THEN
               DO
                  "ISPEXEC SETMSG MSG(CUT003L)"
               END
            ELSE
               DO
                  "ISPEXEC SETMSG MSG(CUT003M)"
               END
         END
   END


EXIT 0
