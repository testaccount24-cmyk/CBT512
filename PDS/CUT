/* REXX */


/*********************************************************************/
/*                                                                   */
/* ISPF Edit Macro "CUT".                                            */
/*                                                                   */
/* The "CUT" and "PASTE" edit macros allow users to easily copy text */
/* lines between ISPF editor sessions, via a temporary ISPF table.   */
/*                                                                   */
/* Author: Luc Van Rompaey, Telepolis Antwerpen, Belgium.            */
/*                                                                   */
/*********************************************************************/


"ISREDIT MACRO ( Args ) NOPROCESS"


CutMnLim =  100        /* Minimum value allowed for the Line Limit.  */
CutMxLim = 9999        /* Maximum value allowed for the Lime Limit.  */


CutInTbl = "AA"        /* Initial value for the Default Table Name.  */
CutInLim = 2000        /* Initial value for the Default Line Limit.  */


CutCmd   = ""
CutTable = ""
CutLimit = ""


ShortCmds = "A"      "D"        "H"    "?"    "P"      "R"
LongCmds  = "APPEND" "DEFAULTS" "HELP" "HELP" "PROMPT" "REPLACE"


"ISPEXEC VGET (CUTDFCMD CUTDFPST CUTDFTBL CUTDFLIM) PROFILE"


/*********************************************************************/
/*                                                                   */
/* Parse the argument string.                                        */
/*                                                                   */
/*********************************************************************/


ArgError = 0


DO i = 1 BY 1


   arg = WORD( Args , i )


   SELECT
      WHEN ( arg = "" ) THEN
         DO
            /*********************************************************/
            /*                                                       */
            /* This is the end of the argument string.               */
            /*                                                       */
            /*********************************************************/
            LEAVE
         END
      WHEN ( LENGTH( arg ) = 2 ) THEN
         DO
            IF ( CutTable /= "" ) THEN
               DO
                  /***************************************************/
                  /*                                                 */
                  /* ERROR:  Multiple occurrences of the  'CutTable' */
                  /*         argument were found.                    */
                  /*                                                 */
                  /***************************************************/
                  ArgError = 1
               END
            ELSE
               DO
                  /***************************************************/
                  /*                                                 */
                  /* This is the 'CutTable' argument.                */
                  /*                                                 */
                  /***************************************************/
                  CutTable = TRANSLATE( arg )
               END
         END
      WHEN ( WORDPOS( arg , "0 1 2 3 4 5 6 7 8 9" ) > 0 ) THEN
         DO
            IF ( CutTable /= "" ) THEN
               DO
                  /***************************************************/
                  /*                                                 */
                  /* ERROR:  Multiple occurrences of the  'CutTable' */
                  /*         argument were found.                    */
                  /*                                                 */
                  /***************************************************/
                  ArgError = 1
               END
            ELSE
               DO
                  /***************************************************/
                  /*                                                 */
                  /* This is the 'CutTable' argument.                */
                  /*                                                 */
                  /***************************************************/
                  CutTable = "0"arg
               END
         END
      WHEN ( DATATYPE( arg , "WHOLE NUMBER" ) ) THEN
         DO
            IF ( CutLimit /= "" ) THEN
               DO
                  /***************************************************/
                  /*                                                 */
                  /* ERROR:  Multiple occurrences of the  'CutLimit' */
                  /*         argument were found.                    */
                  /*                                                 */
                  /***************************************************/
                  ArgError = 1
               END
            ELSE
               DO
                  /***************************************************/
                  /*                                                 */
                  /* Strip leading zeroes off the numeric value.     */
                  /*                                                 */
                  /***************************************************/
                  arg = arg + 0
                  /***************************************************/
                  /*                                                 */
                  /* This is the 'CutLimit' argument,  provided that */
                  /* its length  is  no  greater  than  the  maximum */
                  /* length allowed  for  it;  otherwise,  an  error */
                  /* will have to be reported.                       */
                  /*                                                 */
                  /***************************************************/
                  IF ( LENGTH( arg ) > LENGTH( CutMxLim ) ) THEN
                     DO
                        ArgError = 1
                     END
                  ELSE
                     DO
                        CutLimit = arg
                     END
               END
         END
      OTHERWISE
         DO
            IF ( CutCmd /= "" ) THEN
               DO
                  /***************************************************/
                  /*                                                 */
                  /* ERROR:  Multiple occurrences  of  the  'CutCmd' */
                  /*         argument were found.                    */
                  /*                                                 */
                  /***************************************************/
                  ArgError = 1
               END
            ELSE
               DO
                  arg = TRANSLATE( LEFT( arg , 1 ) )
                  /***************************************************/
                  /*                                                 */
                  /* This is the  'CutCmd'  argument,  provided that */
                  /* it  is  recognised  as  a  valid  action  name; */
                  /* otherwise, an error will have to be reported.   */
                  /*                                                 */
                  /***************************************************/
                  CmdNo = WORDPOS( arg , ShortCmds )
                  IF ( CmdNo < 1 ) THEN
                     DO
                        ArgError = 1
                     END
                  ELSE
                     DO
                        CutCmd = WORD( LongCmds , CmdNo )
                     END
               END
         END
   END


END


IF ArgError THEN
   DO
      /***************************************************************/
      /*                                                             */
      /* Invalid arguments.                                          */
      /* Return an error condition to the ISPF Editor.               */
      /*                                                             */
      /***************************************************************/
      "ISPEXEC SETMSG MSG(CUT000)"
      EXIT 12
   END


/*********************************************************************/
/*                                                                   */
/* If the  user  requested  the  "HELP"  action,  then  display  the */
/* appropriate tutorial page.                                        */
/* Then, when the user returns from the tutorial, just exit.         */
/*                                                                   */
/*********************************************************************/


IF ( CutCmd = "HELP" ) THEN
   DO
      "ISPEXEC CONTROL DISPLAY SAVE"
      "ISPEXEC SELECT PGM(ISPTUTOR) PARM(CUTHELP)"
      "ISPEXEC CONTROL DISPLAY RESTORE"
      EXIT 0
   END


/*********************************************************************/
/*                                                                   */
/* Decide if the 'CUTDFPRM' panel will be displayed to the user.     */
/*                                                                   */
/*********************************************************************/


SELECT
   WHEN ( CutCmd = "DEFAULTS" ) THEN
      DO
         /************************************************************/
         /*                                                          */
         /* No special preparatory actions need be taken  to display */
         /* the 'CUTDFPRM' panel.                                    */
         /*                                                          */
         /************************************************************/
         NOP
      END
   WHEN ( CutDfCmd = "" ) THEN
      DO
         /************************************************************/
         /*                                                          */
         /* This is a new user.                                      */
         /* Display  a  welcome  panel.  Then,  if the user wants to */
         /* continue,  no further special action need  be  taken  to */
         /* display the 'CUTDFPRM' panel.                            */
         /*                                                          */
         /************************************************************/
         "ISPEXEC DISPLAY PANEL(CUTDFNEW)"
         ReturnCode = RC


         IF ( ReturnCode = 8 ) THEN
            DO
               /******************************************************/
               /*                                                    */
               /* The user requested termination,  by typing  either */
               /* the END or the RETURN command.                     */
               /*                                                    */
               /******************************************************/
               EXIT 0
            END
      END
   OTHERWISE
      DO
         /************************************************************/
         /*                                                          */
         /* Ensure that the 'CUTDFPRM' panel will  be  processed  in */
         /* non-display mode,  so it will run its data  validations. */
         /* The panel will not,  then,  get  displayed  to the user, */
         /* unless it contains invalid data values.                  */
         /*                                                          */
         /************************************************************/
         "ISPEXEC CONTROL NONDISPL"
      END
END


"ISPEXEC DISPLAY PANEL(CUTDFPRM)"
ReturnCode = RC


IF ( ReturnCode = 8 ) THEN
   DO
      /***************************************************************/
      /*                                                             */
      /* The user requested termination, by typing either the END or */
      /* the RETURN command.                                         */
      /*                                                             */
      /***************************************************************/
      EXIT 0
   END


"ISPEXEC VPUT (CUTDFCMD CUTDFPST CUTDFTBL CUTDFLIM) PROFILE"


IF ( CutCmd = "DEFAULTS" ) THEN
   DO
      /***************************************************************/
      /*                                                             */
      /* No  further  processing  is  required  for  the  "DEFAULTS" */
      /* action.                                                     */
      /*                                                             */
      /***************************************************************/
      EXIT 0
   END


IF ( CutCmd = "PROMPT" ) THEN
   DO
      /***************************************************************/
      /*                                                             */
      /* The user requested the "PROMPT" action.                     */
      /*                                                             */
      /***************************************************************/
      CutCmd = CutDfCmd
   END
ELSE
   DO
      /***************************************************************/
      /*                                                             */
      /* Ensure that the  'CUTPRMPT'  panel  will  be  processed  in */
      /* non-display mode.                                           */
      /*                                                             */
      /***************************************************************/
      "ISPEXEC CONTROL NONDISPL"
   END


"ISPEXEC DISPLAY PANEL(CUTPRMPT)"
ReturnCode = RC


IF ( ReturnCode = 8 ) THEN
   DO
      /***************************************************************/
      /*                                                             */
      /* The user requested termination,  by typing either  the  END */
      /* or the RETURN command.                                      */
      /*                                                             */
      /***************************************************************/
      EXIT 0
   END


/*********************************************************************/
/*                                                                   */
/* Use the default values for any arguments that the  user  did  not */
/* specify.                                                          */
/*                                                                   */
/*********************************************************************/


IF ( CutCmd   = "" ) THEN   CutCmd   = CutDfCmd
IF ( CutTable = "" ) THEN   CutTable = CutDfTbl
IF ( CutLimit = "" ) THEN   CutLimit = CutDfLim


/*********************************************************************/
/*                                                                   */
/* Process the C(opy) or M(ove) line commands.                       */
/* Note that the  "ISREDIT PROCESS"  command may result in a  return */
/* code of 16,  if the user enters incomplete  or  conflicting  line */
/* commands.  By default,  ISPF will intercept these  return  codes, */
/* and terminate the macro  when they occur.  To  ensure  that  ISPF */
/* will, instead,  return control back to the edit macro under these */
/* conditions,  the "ISREDIT PROCESS" command will have to be run in */
/* ERRORS RETURN mode.                                               */
/*                                                                   */
/*********************************************************************/


"ISPEXEC CONTROL ERRORS RETURN"   /* Initiate ERRORS RETURN mode.    */
"ISREDIT PROCESS RANGE C M"       /* Process C(opy) or M(ove) range. */
ReturnCode = RC                   /* Catch the return code.          */
"ISPEXEC CONTROL ERRORS CANCEL"   /* Return to ERRORS CANCEL mode.   */


IF ( ReturnCode /= 0 ) THEN
   DO
      SELECT
         WHEN ( ReturnCode < 16 ) THEN
            DO
               /******************************************************/
               /*                                                    */
               /* Missing line commands.                             */
               /* In this case,  the  return  code  will  be  4,  to */
               /* indicate that a range was expected but not found.  */
               /*                                                    */
               /******************************************************/
               "ISPEXEC SETMSG MSG(CUT000A)"
               EXIT 12
            END
         WHEN ( ReturnCode = 16 ) THEN
            DO
               /******************************************************/
               /*                                                    */
               /* Incomplete or conflicting line commands.           */
               /* ISPF has set up the appropriate  system  variables */
               /* for  message  'ISRZ002';  these  system  variables */
               /* will be reused by message 'CUT000B'.               */
               /*                                                    */
               /******************************************************/
               "ISPEXEC SETMSG MSG(CUT000B)"
               EXIT 8
            END
         OTHERWISE
            DO
               /******************************************************/
               /*                                                    */
               /* Severe error.                                      */
               /*                                                    */
               /******************************************************/
               "ISPEXEC SETMSG MSG(CUT000C)"
               EXIT 12
            END
      END
   END


/*********************************************************************/
/*                                                                   */
/* Query the range command,  and the range  of  lines  to  which  it */
/* applies.                                                          */
/* Also query the current bounds settings and the data width.        */
/* Furthermore,  construct  the  ISPF  table  name  into  which  the */
/* cut lines will be stored, and set the name of its table variable. */
/*                                                                   */
/*********************************************************************/


"ISREDIT  ( RangeCmd ) = RANGE_CMD"        /* Line Command.          */
"ISREDIT  ( RangeLo  ) = LINENUM .ZFRANGE" /* First Line in Range.   */
"ISREDIT  ( RangeHi  ) = LINENUM .ZLRANGE" /* Last  Line in Range.   */


"ISREDIT  ( BndsLo , BndsHi ) = BOUNDS"    /* Current Bounds.        */
"ISREDIT  ( EditCols ) = DATA_WIDTH"       /* Current Data Width.    */


RangeCnt  = RangeHi - RangeLo + 1          /* Lines   within Range.  */
BndsCols  = BndsHi  - BndsLo  + 1          /* Columns within Bounds. */


TableName = "CUTTBL"CutTable               /* ISPF Table Name.       */
TableVar  = "CUTLINE"                      /* Table Variable Name.   */


/*********************************************************************/
/*                                                                   */
/* Query the status of the table with respect to the current logical */
/* screen.  Only two status values can be supported by this macro:   */
/*    o  1 - The table is not open in this logical screen;           */
/*    o  4 - The table is  open  in  SHARED  NOWRITE  mode  in  this */
/*           logical screen.                                         */
/*                                                                   */
/*********************************************************************/


"ISPEXEC TBSTATS" TableName "STATUS2(STATUS2)"


IF ( CutCmd = "REPLACE" ) THEN
   DO
      /***************************************************************/
      /*                                                             */
      /* The user requested the "REPLACE" action.                    */
      /*                                                             */
      /* If the table is currently open within the  logical  screen, */
      /* then  close  the  table.  Since the use count of the  table */
      /* within the logical screen may be higher  than  1,  keep  on */
      /* closing the table  until  the  logical  screen  effectively */
      /* releases the table.                                         */
      /*                                                             */
      /***************************************************************/
      DO WHILE ( Status2 /= 1 )
         "ISPEXEC TBEND"   TableName
         "ISPEXEC TBSTATS" TableName "STATUS2(STATUS2)"
      END
      /***************************************************************/
      /*                                                             */
      /* Attempt to recreate the table.                              */
      /*                                                             */
      /***************************************************************/
      "ISPEXEC TBCREATE" TableName "NAMES("TableVar")"                ,
                                   "NOWRITE REPLACE SHARE"
      ReturnCode = RC


      IF ( ReturnCode > 4 ) THEN
         DO
            /*********************************************************/
            /*                                                       */
            /* The table could not be recreated, most likely because */
            /* it is still being used by another logical screen.     */
            /* Attempt to open it, and delete its rows one  by  one, */
            /* starting from the bottom.                             */
            /*                                                       */
            /*********************************************************/
            "ISPEXEC TBOPEN" TableName "NOWRITE SHARE"
            ReturnCode = RC


            IF ( ReturnCode = 0 ) THEN
               DO
                  "ISPEXEC TBBOTTOM" TableName "NOREAD"
                  ReturnCode = RC


                  DO WHILE ( ReturnCode = 0 )
                     "ISPEXEC TBDELETE" TableName
                     ReturnCode = RC
                  END
               END
         END
   END
ELSE
   DO
      /***************************************************************/
      /*                                                             */
      /* The user requested the "APPEND" action.                     */
      /*                                                             */
      /* If the table is  not  currently  open  within  the  logical */
      /* screen,  then  attempt to open it,  and  position  the  row */
      /* pointer at the bottom of the table.                         */
      /* If the table cannot be opened, then it will most likely not */
      /* exist;  in that case, attempt to create it.                 */
      /*                                                             */
      /***************************************************************/
      IF ( Status2 = 1 ) THEN
         DO
            "ISPEXEC TBOPEN" TableName "NOWRITE SHARE"
            ReturnCode = RC


            IF ( ReturnCode = 0 ) THEN
               DO
                  "ISPEXEC TBBOTTOM" TableName
               END
            ELSE
               DO
                  "ISPEXEC TBCREATE" TableName "NAMES("TableVar")"    ,
                                               "NOWRITE"              ,
                                               "REPLACE"              ,
                                               "SHARE"
               END
         END
   END


/*********************************************************************/
/*                                                                   */
/* At  this  point,  the logical screen should have the  table  open */
/* in SHARED NOWRITE mode, or an error will have to be reported.     */
/*                                                                   */
/*********************************************************************/


"ISPEXEC TBSTATS" TableName "STATUS2(STATUS2) ROWCURR(ROWCURR)"


IF ( Status2 /= 4 ) THEN
   DO
      /***************************************************************/
      /*                                                             */
      /* Return an error condition to the ISPF Editor.               */
      /*                                                             */
      /***************************************************************/
      "ISPEXEC SETMSG MSG(CUT000J)"
      EXIT 12
   END


/*********************************************************************/
/*                                                                   */
/* Ensure that the table size will remain within  limits  after  the */
/* cut lines are added to it;  otherwise, report an error.           */
/*                                                                   */
/*********************************************************************/


NwRowNum = RowCurr + RangeCnt
IF ( NwRowNum > CutLimit ) THEN
   DO
      /***************************************************************/
      /*                                                             */
      /* Return an error condition to the ISPF Editor.               */
      /*                                                             */
      /***************************************************************/
      "ISPEXEC SETMSG MSG(CUT000D)"
      EXIT 12
   END


IF ( BndsCols >= EditCols ) THEN
   DO
      /***************************************************************/
      /*                                                             */
      /* Cut the lines  to the table,  one  by  one,  with  trailing */
      /* blanks stripped off.                                        */
      /*                                                             */
      /***************************************************************/
      DO i = RangeLo TO RangeHi
         "ISREDIT ( DataLine ) = LINE" i
         CALL VALUE TableVar , STRIP( DataLine , "TRAILING" )
         "ISPEXEC TBADD" TableName
      END


      /***************************************************************/
      /*                                                             */
      /* If the line command was "M" (for  "MOVE"),  then delete the */
      /* cut lines from the dataset.                                 */
      /*                                                             */
      /***************************************************************/
      IF ( RangeCmd = "M" ) THEN
         DO
            "ISREDIT DELETE" RangeLo RangeHi
            IF ( RangeCnt = 1 ) THEN
               DO
                  IF ( NwRowNum = 1 ) THEN
                     DO
                        "ISPEXEC SETMSG MSG(CUT001A)"
                     END
                  ELSE
                     DO
                        "ISPEXEC SETMSG MSG(CUT001B)"
                     END
               END
            ELSE
               DO
                  "ISPEXEC SETMSG MSG(CUT001C)"
               END
         END
      ELSE
         DO
            IF ( RangeCnt = 1 ) THEN
               DO
                  IF ( NwRowNum = 1 ) THEN
                     DO
                        "ISPEXEC SETMSG MSG(CUT001J)"
                     END
                  ELSE
                     DO
                        "ISPEXEC SETMSG MSG(CUT001K)"
                     END
               END
            ELSE
               DO
                  "ISPEXEC SETMSG MSG(CUT001L)"
               END
         END
   END
ELSE
   DO
      /***************************************************************/
      /*                                                             */
      /* Copy only the columns within the current boundary settings. */
      /* If the line command was "C" (for "COPY"),  then  leave  the */
      /* lines in the edit dataset intact.                           */
      /* If,  on the other hand,  the  line  command  was  "M"  (for */
      /* "MOVE"), then replace the cut positions with spaces.        */
      /*                                                             */
      /***************************************************************/
      IF ( RangeCmd = "C" ) THEN
         DO
            DO i = RangeLo TO RangeHi
               "ISREDIT ( DataLine ) = LINE" i
               BndsLine = SUBSTR( DataLine , BndsLo , BndsCols )
               CALL VALUE TableVar , STRIP( BndsLine , "TRAILING" )
               "ISPEXEC TBADD" TableName
            END


            IF ( RangeCnt = 1 ) THEN
               DO
                  IF ( NwRowNum = 1 ) THEN
                     DO
                        "ISPEXEC SETMSG MSG(CUT001N)"
                     END
                  ELSE
                     DO
                        "ISPEXEC SETMSG MSG(CUT001O)"
                     END
               END
            ELSE
               DO
                  "ISPEXEC SETMSG MSG(CUT001P)"
               END
         END
      ELSE
         DO
            DO i = RangeLo TO RangeHi
               "ISREDIT ( DataLine ) = LINE" i
               BndsLine = SUBSTR( DataLine , BndsLo , BndsCols )
               CALL VALUE TableVar , STRIP( BndsLine , "TRAILING" )
               "ISPEXEC TBADD" TableName
               DataLine = OVERLAY( "" , DataLine , BndsLo , BndsCols )
               "ISREDIT LINE" i "= ( DataLine )"
            END


            IF ( RangeCnt = 1 ) THEN
               DO
                  IF ( NwRowNum = 1 ) THEN
                     DO
                        "ISPEXEC SETMSG MSG(CUT001E)"
                     END
                  ELSE
                     DO
                        "ISPEXEC SETMSG MSG(CUT001F)"
                     END
               END
            ELSE
               DO
                  "ISPEXEC SETMSG MSG(CUT001G)"
               END
         END
   END


EXIT 0
